from main import bot, dp, sql, db
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from aiogram.types.inline_keyboard import InlineKeyboardButton
from asyncio import sleep
from typing import Union
import math
import random


async def output_database():
    for value in sql.execute("SELECT * FROM users"):
        print(value)


@dp.message_handler(commands=['start'])
async def start(message: Message):
    await check_user_base_data(message)
    sql.execute(f"SELECT balance FROM users WHERE user_id = {message.from_user.id}")
    balance = sql.fetchone()
    balance_key = KeyboardButton(f"–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance[0]} ‚ÇΩ")
    keyboard_balance = ReplyKeyboardMarkup(resize_keyboard=True).add(balance_key)
    await bot.send_message(message.from_user.id, f"–í—ã–≤–æ–∂—É —Ç–≤–æ–π –±–∞–ª–∞–Ω—Å...", parse_mode="HTML",
                           reply_markup=keyboard_balance)
    await sleep(1)
    await list_game(message)


async def get_balance(message: Message):
    sql.execute(f"SELECT balance FROM users WHERE user_id = {message.from_user.id}")
    balance = sql.fetchone()
    balance_key = KeyboardButton(f"–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance[0]} ‚ÇΩ")
    keyboard_balance = ReplyKeyboardMarkup(resize_keyboard=True).add(balance_key)
    await bot.send_message(message.from_user.id, f"–£ —Ç–µ–±—è —Å–Ω–æ–≤–∞ –µ—Å—Ç—å <b>5000 ‚ÇΩ</b>", parse_mode="HTML",
                           reply_markup=keyboard_balance)
    await sleep(1)
    await list_game(message)


@dp.message_handler(commands=['menu_game'])
async def menu_game(message: Message):
    await list_game(message)


@dp.message_handler(commands=['reset_balance'])
async def menu_game(message: Message):
    sql.execute(f"UPDATE users SET balance = {5000} WHERE user_id = {message.from_user.id}")
    db.commit()
    await get_balance(message)


@dp.message_handler(commands=['stat'])
async def menu_game(message: Message):
    sql.execute("SELECT username,balance FROM users ORDER BY balance DESC")
    count = 1
    for value in sql.fetchall():
        if count == 1:
            await bot.send_message(message.chat.id, f"{count}| {value[0]} | –ë–∞–ª–∞–Ω—Å: {value[1]} ‚ÇΩ  üëë")
            print(f"{count} | {value[0]} | {value[1]}")
        else:
            await bot.send_message(message.chat.id, f"{count}| {value[0]} | –ë–∞–ª–∞–Ω—Å: {value[1]}‚ÇΩ ")
            print(f"{count} | {value[0]} | {value[1]}")
        count += 1


@dp.message_handler(commands=['rules'])
async def rules(message: Message):
    await bot.send_message(message.from_user.id, "1. –ö–æ—Å—Ç–∏ - –ï—Å–ª–∏ —É —Ç–µ–±—è –≤—ã–ø–∞–ª–æ –±–æ–ª—å—à–µ —á–µ–º —É –±–æ—Ç–∞ - —Ç—ã –≤—ã–∏–≥—Ä–∞–ª —Å—Ç–∞–≤–∫—É"
                                                 ", –µ—Å–ª–∏ —É –≤–∞—Å —Ä–∞–≤–Ω–æ–µ –∫–æ–ª–∏—á–µ—Ç—Å–≤–æ —Å—ã–≥—Ä–∞–µ—Ç x2 —Å—Ç–∞–≤–∫–∞\n"
                                                 "2. –î–∞—Ä—Ç—Å - –ë–ª–∏–∂–µ –∫ —Ü–µ–Ω—Ç—Ä—É –∏ –ø—Ä–∏–∑ –±–æ–ª—å—à–µ.\n"
                                                 "3. –î–≤–µ—Ä–∏ - –£ —Ç–µ–±—è –±—É–¥–µ—Ç –≤—ã–±–æ—Ä –∏–∑ 3 –¥–≤–µ—Ä–µ–π(–∫–Ω–æ–ø–æ–∫) "
                                                 "–µ—Å–ª–∏ —É–≥–∞–¥–∞–µ—à—å –ø–æ–ª—É—á–∏—à—å –ø—Ä–∏–∑!.\n"
                                                 "4. –û–¥–Ω–æ—Ä—É–∫–∏–π –±–∞–Ω–¥–∏—Ç - –û–¥–Ω–∞ –ø–æ–ø—ã—Ç–∫–∞ –∑–∞ 120 —Ä—É–±–ª–µ–π, "
                                                 "–î–∂–µ–∫–ø–æ—Ç - 3500 —Ä—É–±–ª–µ–π")


async def list_game(message: Union[Message, CallbackQuery]):
    dice = InlineKeyboardButton('–ò–≥—Ä–∞ "–ö–æ—Å—Ç–∏" üé≤', callback_data="kosti")
    darts = InlineKeyboardButton('–ò–≥—Ä–∞ "–î–∞—Ä—Ç—Å" üéØ', callback_data="darts")
    bandit = InlineKeyboardButton('–ò–≥—Ä–∞ "–û–¥–Ω–æ—Ä—É–∫–∏–π –±–∞–Ω–¥–∏—Ç" üé∞', callback_data="bandit")
    door = InlineKeyboardButton('–ò–≥—Ä–∞ "3 –î–≤–µ—Ä–∏" üö™', callback_data="door")
    keyboard_game = InlineKeyboardMarkup()
    keyboard_game.row(dice, darts)
    keyboard_game.row(bandit)
    keyboard_game.row(door)
    await bot.send_message(message.from_user.id, "–í—ã–±–∏—Ä–∞–π –∏–≥—Ä—É –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π üíµ!", reply_markup=keyboard_game)


async def check_user_base_data(message: Message):
    sql.execute(f"SELECT user_id FROM users WHERE user_id = {message.from_user.id}")
    if sql.fetchone() is None:
        await bot.send_message(message.from_user.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π @{message.from_user.username}, –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å "
                                                     f"–Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üòä\n–£ —Ç–µ–±—è –±—É–¥–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–π "
                                                     "–±–∞–ª–∞–Ω—Å –≤ —Ä–∞–∑–º–µ—Ä–µ <b>5000 —Ä—É–±–ª–µ–π</b>, —É–¥–∞—á–∏)")
        sql.execute(f"INSERT INTO users VALUES ('{message.from_user.username}', {message.from_user.id}, {5000}, 'None',{0},{0}, 'None')")
        db.commit()
    else:
        await bot.send_message(message.from_user.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π @{message.from_user.username}, —Ä–∞–¥—ã —Ç–µ–±—è —Å–Ω–æ–≤–∞ "
                                                     f"–≤–∏–¥–µ—Ç—å, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é —Ç–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ ‚è±")


@dp.callback_query_handler(lambda c: c.data == 'kosti')
async def kosti(call: CallbackQuery):
    sql.execute(f"UPDATE users SET status_game = 'kosti' WHERE user_id = {call.from_user.id}")
    db.commit()
    await bot.answer_callback_query(call.id, '–£–¥–∞—á–∏')
    await list_bet(call)


@dp.callback_query_handler(lambda c: c.data == 'darts')
async def darts(call: CallbackQuery):
    sql.execute(f"UPDATE users SET status_game = 'darts' WHERE user_id = {call.from_user.id}")
    db.commit()
    await bot.answer_callback_query(call.id, '–£–¥–∞—á–∏')
    await list_bet(call)


@dp.callback_query_handler(lambda c: c.data == 'door')
async def door(call: CallbackQuery):
    sql.execute(f"UPDATE users SET status_game = 'door' WHERE user_id = {call.from_user.id}")
    db.commit()
    sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
    balance = sql.fetchone()
    await bot.answer_callback_query(call.id, '–£–¥–∞—á–∏')
    bet1 = InlineKeyboardButton("500 ‚ÇΩ", callback_data='d500')
    bet2 = InlineKeyboardButton("1000 ‚ÇΩ", callback_data='d1000')
    keyboard_bet = InlineKeyboardMarkup().add(bet1, bet2)
    await bot.send_message(call.from_user.id, f"üö™ –í—ã–±–∏—Ä–∞–π —Å—Ç–∞–≤–∫—É | –¢–≤–æ–π –±–∞–ª–∞–Ω—Å: <b>{balance[0]} ‚ÇΩ</b>",
                           reply_markup=keyboard_bet)


@dp.callback_query_handler(lambda c: c.data == 'bandit')
async def bandit(call: CallbackQuery):
    sql.execute(f"UPDATE users SET status_game = 'bandit' WHERE user_id = {call.from_user.id}")
    db.commit()
    bet1 = InlineKeyboardButton("120 –∑–∞ –ø–æ–ø—ã—Ç–∫—É!", callback_data='b120')
    keyboard_bet = InlineKeyboardMarkup().add(bet1)
    sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
    balance = sql.fetchone()[0]
    await bot.answer_callback_query(call.id, '–£–¥–∞—á–∏')
    await call.message.answer(f"üé∞. –ü–æ–ø—Ä–æ–±—É–µ–º?. –í–∞—à –±–∞–ª–∞–Ω—Å {balance}", reply_markup=keyboard_bet)


async def list_bet(message: Union[Message, CallbackQuery]):
    sql.execute(f"SELECT balance FROM users WHERE user_id = {message.from_user.id}")
    balance = sql.fetchone()
    bet1 = InlineKeyboardButton(f'{math.floor(balance[0]*0.05)} ‚ÇΩ', callback_data="bet1")
    bet2 = InlineKeyboardButton(f'{math.floor(balance[0]*0.1)} ‚ÇΩ', callback_data="bet2")
    bet3 = InlineKeyboardButton(f'{math.floor(balance[0]*0.2)} ‚ÇΩ', callback_data="bet3")
    bet4 = InlineKeyboardButton(f'{math.floor(balance[0]*1)} ‚ÇΩ', callback_data="bet4")
    keyboard_game = InlineKeyboardMarkup().add(bet1, bet2, bet3, bet4)
    await bot.send_message(message.from_user.id, f"–í—ã–±–∏—Ä–∞–π —Å—Ç–∞–≤–∫—É | –¢–≤–æ–π –±–∞–ª–∞–Ω—Å: <b>{balance[0]} ‚ÇΩ</b>",
                           reply_markup=keyboard_game)


@dp.callback_query_handler(lambda c: c.data == 'bet1')
async def bet_1(call: CallbackQuery):
    await bot.delete_message(call.message.chat.id, call.message.message_id)
    await game_bet(call, 0.05, 'bet1')


@dp.callback_query_handler(lambda c: c.data == 'bet2')
async def bet_2(call: CallbackQuery):
    await bot.delete_message(call.message.chat.id, call.message.message_id)
    await game_bet(call, 0.1, 'bet2')


@dp.callback_query_handler(lambda c: c.data == 'bet3')
async def bet_3(call: CallbackQuery):
    await bot.delete_message(call.message.chat.id, call.message.message_id)
    await game_bet(call, 0.2, 'bet3')


@dp.callback_query_handler(lambda c: c.data == 'bet4')
async def bet_4(call: CallbackQuery):
    await bot.delete_message(call.message.chat.id, call.message.message_id)
    await game_bet(call, 1, 'bet4')


@dp.callback_query_handler(lambda c: c.data == 'd500')
async def d500(call: CallbackQuery):
    await bot.delete_message(call.message.chat.id, call.message.message_id)
    await game_door(call, 500, 'd500')


@dp.callback_query_handler(lambda c: c.data == 'd1000')
async def d1000(call: CallbackQuery):
    await bot.delete_message(call.message.chat.id, call.message.message_id)
    await game_door(call, 1000, 'd1000')


async def game_door(call: CallbackQuery, bets, bet_caption):
    sql.execute(f"UPDATE users SET bet = {bets} WHERE user_id = {call.from_user.id}")
    db.commit()
    sql.execute(f"UPDATE users SET bet_caption = '{bet_caption}' WHERE user_id = {call.from_user.id}")
    db.commit()
    sql.execute(f"SELECT status_game FROM users WHERE user_id = {call.from_user.id}")
    if sql.fetchone()[0] == "door":
        price_door = random.randint(1, 3)
        sql.execute(f"UPDATE users SET rand_door = {price_door} WHERE user_id = {call.from_user.id}")
        db.commit()
        if price_door == 1:
            door1 = InlineKeyboardButton(" üö™ ", callback_data="price")
            door2 = InlineKeyboardButton(" üö™ ", callback_data="two")
            door3 = InlineKeyboardButton(" üö™ ", callback_data="three")
        if price_door == 2:
            door1 = InlineKeyboardButton(" üö™ ", callback_data="one")
            door2 = InlineKeyboardButton(" üö™ ", callback_data="price")
            door3 = InlineKeyboardButton(" üö™ ", callback_data="three")
        if price_door == 3:
            door1 = InlineKeyboardButton(" üö™ ", callback_data="one")
            door2 = InlineKeyboardButton(" üö™ ", callback_data="two")
            door3 = InlineKeyboardButton(" üö™ ", callback_data="price")

        keyboard_door = InlineKeyboardMarkup().add(door1, door2, door3)
        await bot.send_message(call.from_user.id, f"–ó–∞ –∫–∞–∫–æ–π –¥–≤–µ—Ä—å—é –ø—Ä–∏–∑?", reply_markup=keyboard_door)


@dp.callback_query_handler(lambda c: c.data == 'price')
async def price(call: CallbackQuery):
    sql.execute(f"SELECT rand_door FROM users WHERE user_id = {call.from_user.id}")
    price_door = sql.fetchone()[0]
    if price_door == 1:
        door1 = InlineKeyboardButton(" üí∞ ", callback_data="#")
        door2 = InlineKeyboardButton(" ‚ùå ", callback_data="#")
        door3 = InlineKeyboardButton(" ‚ùå ", callback_data="#")
    if price_door == 2:
        door1 = InlineKeyboardButton(" ‚ùå ", callback_data="#")
        door2 = InlineKeyboardButton(" üí∞ ", callback_data="#")
        door3 = InlineKeyboardButton(" ‚ùå ", callback_data="#")
    if price_door == 3:
        door1 = InlineKeyboardButton(" ‚ùå ", callback_data="#")
        door2 = InlineKeyboardButton(" ‚ùå ", callback_data="#")
        door3 = InlineKeyboardButton(" üí∞ ", callback_data="#")
    sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
    balance = sql.fetchone()[0]
    sql.execute(f"SELECT bet FROM users WHERE user_id = {call.from_user.id}")
    bet = sql.fetchone()[0]
    balance = balance + (math.floor(bet * 2))
    sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {call.from_user.id}")
    db.commit()
    keyboard_door = InlineKeyboardMarkup().add(door1, door2, door3)
    button_balance = KeyboardButton(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ')
    keyboard_for_balance = ReplyKeyboardMarkup(resize_keyboard=True).add(button_balance)
    await bot.send_message(call.from_user.id, f"–ë–∞–ª–∞–Ω—Å {balance}", reply_markup= keyboard_for_balance)
    await bot.edit_message_text(f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏!", call.message.chat.id, message_id=call.message.message_id)
    await bot.edit_message_reply_markup(call.from_user.id, call.message.message_id, reply_markup=keyboard_door)

    sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
    balance = sql.fetchone()[0]
    sql.execute(f"SELECT bet_caption FROM users WHERE user_id = {call.from_user.id}")
    bet_caption = sql.fetchone()[0]
    await bot.answer_callback_query(call.id, f'–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å {balance} ‚ÇΩ')
    one = InlineKeyboardButton("–ò–≥—Ä–∞–µ–º!", callback_data=bet_caption)
    two = InlineKeyboardButton("–î—Ä—É–≥–∞—è —Å—Ç–∞–≤–∫–∞!", callback_data='door')
    three = InlineKeyboardButton("–î—Ä—É–≥–∞—è –∏–≥—Ä–∞", callback_data='other_game')
    keyboard_choice = InlineKeyboardMarkup().add(one, two)
    keyboard_choice.row(three)
    await call.message.answer("–ò–≥—Ä–∞–µ–º –µ—â—ë –≤ üö™ –Ω–∞ —Å—Ç–∞–≤–∫—É " + str(math.floor(bet)) + ' ‚ÇΩ ?',
                              reply_markup=keyboard_choice)


@dp.callback_query_handler(lambda c: c.data == 'one' or c.data == 'two' or c.data == 'three')
async def one(call: CallbackQuery):
    sql.execute(f"SELECT rand_door FROM users WHERE user_id = {call.from_user.id}")
    price_door = sql.fetchone()[0]
    if price_door == 1:
        door1 = InlineKeyboardButton(" üí∞ ", callback_data="#")
        door2 = InlineKeyboardButton(" ‚ùå ", callback_data="#")
        door3 = InlineKeyboardButton(" ‚ùå ", callback_data="#")
    if price_door == 2:
        door1 = InlineKeyboardButton(" ‚ùå ", callback_data="#")
        door2 = InlineKeyboardButton(" üí∞ ", callback_data="#")
        door3 = InlineKeyboardButton(" ‚ùå ", callback_data="#")
    if price_door == 3:
        door1 = InlineKeyboardButton(" ‚ùå ", callback_data="#")
        door2 = InlineKeyboardButton(" ‚ùå ", callback_data="#")
        door3 = InlineKeyboardButton(" üí∞ ", callback_data="#")
    sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
    balance = sql.fetchone()[0]
    sql.execute(f"SELECT bet FROM users WHERE user_id = {call.from_user.id}")
    bet = sql.fetchone()[0]
    balance = balance - bet
    sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {call.from_user.id}")
    db.commit()
    keyboard_door = InlineKeyboardMarkup().add(door1, door2, door3)
    button_balance = KeyboardButton(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ')
    keyboard_for_balance = ReplyKeyboardMarkup(resize_keyboard=True).add(button_balance)
    await bot.send_message(call.from_user.id, f"–ë–∞–ª–∞–Ω—Å {balance}", reply_markup=keyboard_for_balance)
    await bot.edit_message_text(f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!", call.message.chat.id, message_id=call.message.message_id)
    await bot.edit_message_reply_markup(call.from_user.id, call.message.message_id, reply_markup=keyboard_door)

    sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
    balance = sql.fetchone()[0]
    sql.execute(f"SELECT bet_caption FROM users WHERE user_id = {call.from_user.id}")
    bet_caption = sql.fetchone()[0]
    await bot.answer_callback_query(call.id, f'–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å {balance} ‚ÇΩ')
    one = InlineKeyboardButton("–ò–≥—Ä–∞–µ–º!", callback_data=bet_caption)
    two = InlineKeyboardButton("–î—Ä—É–≥–∞—è —Å—Ç–∞–≤–∫–∞!", callback_data='door')
    three = InlineKeyboardButton("–î—Ä—É–≥–∞—è –∏–≥—Ä–∞", callback_data='other_game')
    keyboard_choice = InlineKeyboardMarkup().add(one, two)
    keyboard_choice.row(three)
    await call.message.answer("–ò–≥—Ä–∞–µ–º –µ—â—ë –≤ üö™ –Ω–∞ —Å—Ç–∞–≤–∫—É " + str(math.floor(bet)) + ' ‚ÇΩ ?',
                              reply_markup=keyboard_choice)


async def game_bet(call: CallbackQuery, bets, bet_caption):
    sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
    sql.execute(f"UPDATE users SET bet = {math.floor(sql.fetchone()[0]*bets)} WHERE user_id = {call.from_user.id}")
    db.commit()
    sql.execute(f"SELECT status_game FROM users WHERE user_id = {call.from_user.id}")
    if sql.fetchone()[0] == "kosti":
        await sleep(0.5)
        await call.message.answer("–ö—É–±–∏–∫ –±–æ—Ç–∞")
        bot_value = await bot.send_dice(call.from_user.id, emoji="üé≤")
        bot_value = bot_value['dice']['value']
        await sleep(4)
        await call.message.answer("–í–∞—à –∫—É–±–∏–∫")
        user_value = await bot.send_dice(call.from_user.id, emoji="üé≤")
        user_value = user_value['dice']['value']
        await sleep(4)
        if user_value > bot_value:
            sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
            balance = sql.fetchone()[0]
            balance += math.floor(balance * bets)
            sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {call.from_user.id}")
            db.commit()
            button_balance = KeyboardButton(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ')
            keyboard_for_balance = ReplyKeyboardMarkup(resize_keyboard=True).add(button_balance)
            await call.message.answer("–í—ã –ø–æ–±–µ–¥–∏–ª–∏!", reply_markup=keyboard_for_balance)
        elif user_value < bot_value:
            sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
            balance = sql.fetchone()[0]
            balance -= math.floor(balance * bets)
            sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {call.from_user.id}")
            db.commit()
            button_balance = KeyboardButton(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ')
            keyboard_for_balance = ReplyKeyboardMarkup(resize_keyboard=True).add(button_balance)
            await call.message.answer("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!", reply_markup=keyboard_for_balance)
        else:
            sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
            balance = sql.fetchone()[0]
            balance += math.floor(balance * bets)*2
            sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {call.from_user.id}")
            db.commit()
            button_balance = KeyboardButton(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ')
            keyboard_for_balance = ReplyKeyboardMarkup(resize_keyboard=True).add(button_balance)
            await call.message.answer("–£—Ö —Ç—ã... —Å—ã–≥—Ä–∞–ª–∞ —Å—Ç–∞–≤–∫–∞ x2", reply_markup=keyboard_for_balance)

        sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
        balance = sql.fetchone()[0]
        await bot.answer_callback_query(call.id, f'–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å {balance} ‚ÇΩ')
        one = InlineKeyboardButton("–ò–≥—Ä–∞–µ–º!", callback_data=bet_caption)
        two = InlineKeyboardButton("–î—Ä—É–≥–∞—è —Å—Ç–∞–≤–∫–∞!", callback_data='kosti')
        three = InlineKeyboardButton("–î—Ä—É–≥–∞—è –∏–≥—Ä–∞", callback_data='other_game')
        keyboard_choice = InlineKeyboardMarkup().add(one, two)
        keyboard_choice.row(three)
        await call.message.answer("–ò–≥—Ä–∞–µ–º –µ—â—ë –≤ üé≤ –Ω–∞ —Å—Ç–∞–≤–∫—É " + str(math.floor(balance*bets)) + ' ‚ÇΩ ?',
                                  reply_markup=keyboard_choice)

    sql.execute(f"SELECT status_game FROM users WHERE user_id = {call.from_user.id}")
    if sql.fetchone()[0] == "darts":
        await sleep(0.5)
        await call.message.answer("–ë—Ä–æ—Å–∞–µ–º...")
        user_value = await bot.send_dice(call.from_user.id, emoji="üéØ")
        user_value = user_value['dice']['value']
        await sleep(3.5)
        if user_value == 1:
            sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
            balance = sql.fetchone()[0]
            balance -= math.floor(balance * bets)
            sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {call.from_user.id}")
            db.commit()
            button_balance = KeyboardButton(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ')
            keyboard_for_balance = ReplyKeyboardMarkup(resize_keyboard=True).add(button_balance)
            await call.message.answer("–ù–∏–∫—É–¥–∞ –Ω–µ –≥–æ–¥–∏—Ç—Å—è", reply_markup=keyboard_for_balance)
        if user_value == 2:
            sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
            balance = sql.fetchone()[0]
            balance = balance - math.floor(balance*bets) + math.floor((balance*bets)*0.1)
            sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {call.from_user.id}")
            db.commit()
            button_balance = KeyboardButton(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ')
            keyboard_for_balance = ReplyKeyboardMarkup(resize_keyboard=True).add(button_balance)
            await call.message.answer("–ù–∞ –≥—Ä–∞–Ω–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ 10% –æ—Ç —Å—Ç–∞–≤–∫–∏", reply_markup=keyboard_for_balance)
        if user_value == 3:
            sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
            balance = sql.fetchone()[0]
            balance = balance - math.floor(balance*bets) + math.floor((balance*bets)*0.2)
            sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {call.from_user.id}")
            db.commit()
            button_balance = KeyboardButton(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ')
            keyboard_for_balance = ReplyKeyboardMarkup(resize_keyboard=True).add(button_balance)
            await call.message.answer("–ù–∞ –≥—Ä–∞–Ω–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ 20% –æ—Ç —Å—Ç–∞–≤–∫–∏", reply_markup=keyboard_for_balance)
        if user_value == 4:
            sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
            balance = sql.fetchone()[0]
            balance = balance+500
            sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {call.from_user.id}")
            db.commit()
            button_balance = KeyboardButton(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ')
            keyboard_for_balance = ReplyKeyboardMarkup(resize_keyboard=True).add(button_balance)
            await call.message.answer("–ù–µ–ø–ª–æ—Ö–æ. –ë–æ–Ω—É—Å! + 150 ‚ÇΩ", reply_markup=keyboard_for_balance)
        if user_value == 5:
            sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
            balance = sql.fetchone()[0]
            balance += math.floor(balance * bets)
            sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {call.from_user.id}")
            db.commit()
            button_balance = KeyboardButton(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ')
            keyboard_for_balance = ReplyKeyboardMarkup(resize_keyboard=True).add(button_balance)
            await call.message.answer("–û—Ç–ª–∏—á–Ω–æ", reply_markup=keyboard_for_balance)
        if user_value == 6:
            sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
            balance = sql.fetchone()[0]
            balance += math.floor(balance * bets) * 2
            sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {call.from_user.id}")
            db.commit()
            button_balance = KeyboardButton(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ')
            keyboard_for_balance = ReplyKeyboardMarkup(resize_keyboard=True).add(button_balance)
            await call.message.answer("–°—ã–≥—Ä–∞–ª–∞ —Å—Ç–∞–≤–∫–∞ x2", reply_markup=keyboard_for_balance)

        sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
        balance = sql.fetchone()[0]
        await bot.answer_callback_query(call.id, f'–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å {balance} ‚ÇΩ')
        one = InlineKeyboardButton("–ò–≥—Ä–∞–µ–º!", callback_data=bet_caption)
        two = InlineKeyboardButton("–î—Ä—É–≥–∞—è —Å—Ç–∞–≤–∫–∞!", callback_data='darts')
        three = InlineKeyboardButton("–î—Ä—É–≥–∞—è –∏–≥—Ä–∞", callback_data='other_game')
        keyboard_choice = InlineKeyboardMarkup().add(one, two)
        keyboard_choice.row(three)
        await call.message.answer("–ò–≥—Ä–∞–µ–º –µ—â—ë –≤ üéØ –Ω–∞ —Å—Ç–∞–≤–∫—É " + str(math.floor(balance * bets)) + ' ‚ÇΩ ?',
                                  reply_markup=keyboard_choice)


@dp.callback_query_handler(lambda c: c.data == 'other_game')
async def other_games(call: CallbackQuery):
    dice = InlineKeyboardButton('–ò–≥—Ä–∞ "–ö–æ—Å—Ç–∏" üé≤', callback_data="kosti")
    darts = InlineKeyboardButton('–ò–≥—Ä–∞ "–î–∞—Ä—Ç—Å" üéØ', callback_data="darts")
    bandit = InlineKeyboardButton('–ò–≥—Ä–∞ "–û–¥–Ω–æ—Ä—É–∫–∏–π –±–∞–Ω–¥–∏—Ç" üé∞', callback_data="bandit")
    door = InlineKeyboardButton('–ò–≥—Ä–∞ "3 –î–≤–µ—Ä–∏" üö™', callback_data="door")
    keyboard_game = InlineKeyboardMarkup()
    keyboard_game.row(dice, darts)
    keyboard_game.row(bandit)
    keyboard_game.row(door)
    await call.message.answer("–í—ã–±–∏—Ä–∞–π –∏–≥—Ä—É –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π üíµ!", reply_markup=keyboard_game)


@dp.callback_query_handler(lambda c: c.data == 'b120')
async def b120(call: CallbackQuery):
    sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
    balance = sql.fetchone()[0]
    if balance > 120:
        await sleep(0.2)
        await call.message.answer("–ö—Ä—É—Ç–∏–º...")
        user_value = await bot.send_dice(call.from_user.id, emoji="üé∞")
        user_value = user_value['dice']['value']
        await sleep(2.3)
        if user_value == 1 or user_value == 22 or user_value == 43 or user_value == 64:
            sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
            balance = sql.fetchone()[0]
            balance += 3500
            sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {call.from_user.id}")
            db.commit()
            button_balance = KeyboardButton(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ')
            keyboard_for_balance = ReplyKeyboardMarkup(resize_keyboard=True).add(button_balance)
            await call.message.answer("–î–∂–µ–∫–ø–æ—Ç!", reply_markup=keyboard_for_balance)
        else:
            sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
            balance = sql.fetchone()[0]
            balance -= 120
            sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {call.from_user.id}")
            db.commit()
            button_balance = KeyboardButton(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ')
            keyboard_for_balance = ReplyKeyboardMarkup(resize_keyboard=True).add(button_balance)
            await call.message.answer("–ü—Ä–æ–∏–≥—Ä–∞–ª–∏...", reply_markup=keyboard_for_balance)
        await bot.answer_callback_query(call.id, f'–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å {balance} ‚ÇΩ')
        sql.execute(f"SELECT balance FROM users WHERE user_id = {call.from_user.id}")
        balance = sql.fetchone()[0]
        if balance > 120:
            one = InlineKeyboardButton("–ò–≥—Ä–∞–µ–º!", callback_data='b120')
            two = InlineKeyboardButton("–î—Ä—É–≥–∞—è –∏–≥—Ä–∞", callback_data='other_game')
            keyboard_choice = InlineKeyboardMarkup().add(one, two)
            await call.message.answer("–ò–≥—Ä–∞–µ–º –µ—â—ë –≤ üé∞ –Ω–∞ —Å—Ç–∞–≤–∫—É 120 ‚ÇΩ ?", reply_markup=keyboard_choice)
        else:
            await call.message.answer("–ó–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –¥–µ–Ω—å–≥–∏! /reset_balance")
    else:
        await call.message.answer("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥!")